/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042QosLimitsMaxTres type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042QosLimitsMaxTres{}

// V0042QosLimitsMaxTres struct for V0042QosLimitsMaxTres
type V0042QosLimitsMaxTres struct {
	Total []V0042Tres `json:"total,omitempty"`
	Minutes *V0042QosLimitsMaxTresMinutes `json:"minutes,omitempty"`
	Per *V0042QosLimitsMaxTresPer `json:"per,omitempty"`
}

// NewV0042QosLimitsMaxTres instantiates a new V0042QosLimitsMaxTres object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042QosLimitsMaxTres() *V0042QosLimitsMaxTres {
	this := V0042QosLimitsMaxTres{}
	return &this
}

// NewV0042QosLimitsMaxTresWithDefaults instantiates a new V0042QosLimitsMaxTres object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042QosLimitsMaxTresWithDefaults() *V0042QosLimitsMaxTres {
	this := V0042QosLimitsMaxTres{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *V0042QosLimitsMaxTres) GetTotal() []V0042Tres {
	if o == nil || IsNil(o.Total) {
		var ret []V0042Tres
		return ret
	}
	return o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042QosLimitsMaxTres) GetTotalOk() ([]V0042Tres, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *V0042QosLimitsMaxTres) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given []V0042Tres and assigns it to the Total field.
func (o *V0042QosLimitsMaxTres) SetTotal(v []V0042Tres) {
	o.Total = v
}

// GetMinutes returns the Minutes field value if set, zero value otherwise.
func (o *V0042QosLimitsMaxTres) GetMinutes() V0042QosLimitsMaxTresMinutes {
	if o == nil || IsNil(o.Minutes) {
		var ret V0042QosLimitsMaxTresMinutes
		return ret
	}
	return *o.Minutes
}

// GetMinutesOk returns a tuple with the Minutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042QosLimitsMaxTres) GetMinutesOk() (*V0042QosLimitsMaxTresMinutes, bool) {
	if o == nil || IsNil(o.Minutes) {
		return nil, false
	}
	return o.Minutes, true
}

// HasMinutes returns a boolean if a field has been set.
func (o *V0042QosLimitsMaxTres) HasMinutes() bool {
	if o != nil && !IsNil(o.Minutes) {
		return true
	}

	return false
}

// SetMinutes gets a reference to the given V0042QosLimitsMaxTresMinutes and assigns it to the Minutes field.
func (o *V0042QosLimitsMaxTres) SetMinutes(v V0042QosLimitsMaxTresMinutes) {
	o.Minutes = &v
}

// GetPer returns the Per field value if set, zero value otherwise.
func (o *V0042QosLimitsMaxTres) GetPer() V0042QosLimitsMaxTresPer {
	if o == nil || IsNil(o.Per) {
		var ret V0042QosLimitsMaxTresPer
		return ret
	}
	return *o.Per
}

// GetPerOk returns a tuple with the Per field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042QosLimitsMaxTres) GetPerOk() (*V0042QosLimitsMaxTresPer, bool) {
	if o == nil || IsNil(o.Per) {
		return nil, false
	}
	return o.Per, true
}

// HasPer returns a boolean if a field has been set.
func (o *V0042QosLimitsMaxTres) HasPer() bool {
	if o != nil && !IsNil(o.Per) {
		return true
	}

	return false
}

// SetPer gets a reference to the given V0042QosLimitsMaxTresPer and assigns it to the Per field.
func (o *V0042QosLimitsMaxTres) SetPer(v V0042QosLimitsMaxTresPer) {
	o.Per = &v
}

func (o V0042QosLimitsMaxTres) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042QosLimitsMaxTres) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Minutes) {
		toSerialize["minutes"] = o.Minutes
	}
	if !IsNil(o.Per) {
		toSerialize["per"] = o.Per
	}
	return toSerialize, nil
}

type NullableV0042QosLimitsMaxTres struct {
	value *V0042QosLimitsMaxTres
	isSet bool
}

func (v NullableV0042QosLimitsMaxTres) Get() *V0042QosLimitsMaxTres {
	return v.value
}

func (v *NullableV0042QosLimitsMaxTres) Set(val *V0042QosLimitsMaxTres) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042QosLimitsMaxTres) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042QosLimitsMaxTres) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042QosLimitsMaxTres(val *V0042QosLimitsMaxTres) *NullableV0042QosLimitsMaxTres {
	return &NullableV0042QosLimitsMaxTres{value: val, isSet: true}
}

func (v NullableV0042QosLimitsMaxTres) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042QosLimitsMaxTres) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


