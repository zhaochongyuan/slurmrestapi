/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042PartPrio type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042PartPrio{}

// V0042PartPrio struct for V0042PartPrio
type V0042PartPrio struct {
	// Partition name
	Partition *string `json:"partition,omitempty"`
	// Prospective job priority if it runs in this partition
	Priority *int32 `json:"priority,omitempty"`
}

// NewV0042PartPrio instantiates a new V0042PartPrio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042PartPrio() *V0042PartPrio {
	this := V0042PartPrio{}
	return &this
}

// NewV0042PartPrioWithDefaults instantiates a new V0042PartPrio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042PartPrioWithDefaults() *V0042PartPrio {
	this := V0042PartPrio{}
	return &this
}

// GetPartition returns the Partition field value if set, zero value otherwise.
func (o *V0042PartPrio) GetPartition() string {
	if o == nil || IsNil(o.Partition) {
		var ret string
		return ret
	}
	return *o.Partition
}

// GetPartitionOk returns a tuple with the Partition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartPrio) GetPartitionOk() (*string, bool) {
	if o == nil || IsNil(o.Partition) {
		return nil, false
	}
	return o.Partition, true
}

// HasPartition returns a boolean if a field has been set.
func (o *V0042PartPrio) HasPartition() bool {
	if o != nil && !IsNil(o.Partition) {
		return true
	}

	return false
}

// SetPartition gets a reference to the given string and assigns it to the Partition field.
func (o *V0042PartPrio) SetPartition(v string) {
	o.Partition = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *V0042PartPrio) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartPrio) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *V0042PartPrio) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *V0042PartPrio) SetPriority(v int32) {
	o.Priority = &v
}

func (o V0042PartPrio) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042PartPrio) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Partition) {
		toSerialize["partition"] = o.Partition
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	return toSerialize, nil
}

type NullableV0042PartPrio struct {
	value *V0042PartPrio
	isSet bool
}

func (v NullableV0042PartPrio) Get() *V0042PartPrio {
	return v.value
}

func (v *NullableV0042PartPrio) Set(val *V0042PartPrio) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042PartPrio) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042PartPrio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042PartPrio(val *V0042PartPrio) *NullableV0042PartPrio {
	return &NullableV0042PartPrio{value: val, isSet: true}
}

func (v NullableV0042PartPrio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042PartPrio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


