/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042JobArray type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042JobArray{}

// V0042JobArray struct for V0042JobArray
type V0042JobArray struct {
	// Job ID of job array, or 0 if N/A
	JobId *int32 `json:"job_id,omitempty"`
	Limits *V0040JobArrayLimits `json:"limits,omitempty"`
	TaskId *V0042Uint32NoValStruct `json:"task_id,omitempty"`
	// String expression of task IDs in this record
	Task *string `json:"task,omitempty"`
}

// NewV0042JobArray instantiates a new V0042JobArray object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042JobArray() *V0042JobArray {
	this := V0042JobArray{}
	return &this
}

// NewV0042JobArrayWithDefaults instantiates a new V0042JobArray object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042JobArrayWithDefaults() *V0042JobArray {
	this := V0042JobArray{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *V0042JobArray) GetJobId() int32 {
	if o == nil || IsNil(o.JobId) {
		var ret int32
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042JobArray) GetJobIdOk() (*int32, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *V0042JobArray) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given int32 and assigns it to the JobId field.
func (o *V0042JobArray) SetJobId(v int32) {
	o.JobId = &v
}

// GetLimits returns the Limits field value if set, zero value otherwise.
func (o *V0042JobArray) GetLimits() V0040JobArrayLimits {
	if o == nil || IsNil(o.Limits) {
		var ret V0040JobArrayLimits
		return ret
	}
	return *o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042JobArray) GetLimitsOk() (*V0040JobArrayLimits, bool) {
	if o == nil || IsNil(o.Limits) {
		return nil, false
	}
	return o.Limits, true
}

// HasLimits returns a boolean if a field has been set.
func (o *V0042JobArray) HasLimits() bool {
	if o != nil && !IsNil(o.Limits) {
		return true
	}

	return false
}

// SetLimits gets a reference to the given V0040JobArrayLimits and assigns it to the Limits field.
func (o *V0042JobArray) SetLimits(v V0040JobArrayLimits) {
	o.Limits = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *V0042JobArray) GetTaskId() V0042Uint32NoValStruct {
	if o == nil || IsNil(o.TaskId) {
		var ret V0042Uint32NoValStruct
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042JobArray) GetTaskIdOk() (*V0042Uint32NoValStruct, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *V0042JobArray) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given V0042Uint32NoValStruct and assigns it to the TaskId field.
func (o *V0042JobArray) SetTaskId(v V0042Uint32NoValStruct) {
	o.TaskId = &v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *V0042JobArray) GetTask() string {
	if o == nil || IsNil(o.Task) {
		var ret string
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042JobArray) GetTaskOk() (*string, bool) {
	if o == nil || IsNil(o.Task) {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *V0042JobArray) HasTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given string and assigns it to the Task field.
func (o *V0042JobArray) SetTask(v string) {
	o.Task = &v
}

func (o V0042JobArray) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042JobArray) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobId) {
		toSerialize["job_id"] = o.JobId
	}
	if !IsNil(o.Limits) {
		toSerialize["limits"] = o.Limits
	}
	if !IsNil(o.TaskId) {
		toSerialize["task_id"] = o.TaskId
	}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	return toSerialize, nil
}

type NullableV0042JobArray struct {
	value *V0042JobArray
	isSet bool
}

func (v NullableV0042JobArray) Get() *V0042JobArray {
	return v.value
}

func (v *NullableV0042JobArray) Set(val *V0042JobArray) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042JobArray) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042JobArray) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042JobArray(val *V0042JobArray) *NullableV0042JobArray {
	return &NullableV0042JobArray{value: val, isSet: true}
}

func (v NullableV0042JobArray) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042JobArray) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


