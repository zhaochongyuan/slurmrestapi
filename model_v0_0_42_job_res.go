/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V0042JobRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042JobRes{}

// V0042JobRes struct for V0042JobRes
type V0042JobRes struct {
	SelectType []string `json:"select_type"`
	Nodes *V0042JobResNodes `json:"nodes,omitempty"`
	// Number of allocated CPUs
	Cpus int32 `json:"cpus"`
	ThreadsPerCore V0042Uint16NoValStruct `json:"threads_per_core"`
}

type _V0042JobRes V0042JobRes

// NewV0042JobRes instantiates a new V0042JobRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042JobRes(selectType []string, cpus int32, threadsPerCore V0042Uint16NoValStruct) *V0042JobRes {
	this := V0042JobRes{}
	this.SelectType = selectType
	this.Cpus = cpus
	this.ThreadsPerCore = threadsPerCore
	return &this
}

// NewV0042JobResWithDefaults instantiates a new V0042JobRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042JobResWithDefaults() *V0042JobRes {
	this := V0042JobRes{}
	return &this
}

// GetSelectType returns the SelectType field value
func (o *V0042JobRes) GetSelectType() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SelectType
}

// GetSelectTypeOk returns a tuple with the SelectType field value
// and a boolean to check if the value has been set.
func (o *V0042JobRes) GetSelectTypeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelectType, true
}

// SetSelectType sets field value
func (o *V0042JobRes) SetSelectType(v []string) {
	o.SelectType = v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *V0042JobRes) GetNodes() V0042JobResNodes {
	if o == nil || IsNil(o.Nodes) {
		var ret V0042JobResNodes
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042JobRes) GetNodesOk() (*V0042JobResNodes, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *V0042JobRes) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given V0042JobResNodes and assigns it to the Nodes field.
func (o *V0042JobRes) SetNodes(v V0042JobResNodes) {
	o.Nodes = &v
}

// GetCpus returns the Cpus field value
func (o *V0042JobRes) GetCpus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value
// and a boolean to check if the value has been set.
func (o *V0042JobRes) GetCpusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpus, true
}

// SetCpus sets field value
func (o *V0042JobRes) SetCpus(v int32) {
	o.Cpus = v
}

// GetThreadsPerCore returns the ThreadsPerCore field value
func (o *V0042JobRes) GetThreadsPerCore() V0042Uint16NoValStruct {
	if o == nil {
		var ret V0042Uint16NoValStruct
		return ret
	}

	return o.ThreadsPerCore
}

// GetThreadsPerCoreOk returns a tuple with the ThreadsPerCore field value
// and a boolean to check if the value has been set.
func (o *V0042JobRes) GetThreadsPerCoreOk() (*V0042Uint16NoValStruct, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThreadsPerCore, true
}

// SetThreadsPerCore sets field value
func (o *V0042JobRes) SetThreadsPerCore(v V0042Uint16NoValStruct) {
	o.ThreadsPerCore = v
}

func (o V0042JobRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042JobRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["select_type"] = o.SelectType
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	toSerialize["cpus"] = o.Cpus
	toSerialize["threads_per_core"] = o.ThreadsPerCore
	return toSerialize, nil
}

func (o *V0042JobRes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"select_type",
		"cpus",
		"threads_per_core",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0042JobRes := _V0042JobRes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV0042JobRes)

	if err != nil {
		return err
	}

	*o = V0042JobRes(varV0042JobRes)

	return err
}

type NullableV0042JobRes struct {
	value *V0042JobRes
	isSet bool
}

func (v NullableV0042JobRes) Get() *V0042JobRes {
	return v.value
}

func (v *NullableV0042JobRes) Set(val *V0042JobRes) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042JobRes) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042JobRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042JobRes(val *V0042JobRes) *NullableV0042JobRes {
	return &NullableV0042JobRes{value: val, isSet: true}
}

func (v NullableV0042JobRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042JobRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


