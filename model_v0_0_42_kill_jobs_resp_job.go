/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V0042KillJobsRespJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042KillJobsRespJob{}

// V0042KillJobsRespJob struct for V0042KillJobsRespJob
type V0042KillJobsRespJob struct {
	Error *V0040KillJobsRespJobError `json:"error,omitempty"`
	// Job or Step ID that signaling failed
	StepId string `json:"step_id"`
	JobId V0042Uint32NoValStruct `json:"job_id"`
	Federation *V0040KillJobsRespJobFederation `json:"federation,omitempty"`
}

type _V0042KillJobsRespJob V0042KillJobsRespJob

// NewV0042KillJobsRespJob instantiates a new V0042KillJobsRespJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042KillJobsRespJob(stepId string, jobId V0042Uint32NoValStruct) *V0042KillJobsRespJob {
	this := V0042KillJobsRespJob{}
	this.StepId = stepId
	this.JobId = jobId
	return &this
}

// NewV0042KillJobsRespJobWithDefaults instantiates a new V0042KillJobsRespJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042KillJobsRespJobWithDefaults() *V0042KillJobsRespJob {
	this := V0042KillJobsRespJob{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *V0042KillJobsRespJob) GetError() V0040KillJobsRespJobError {
	if o == nil || IsNil(o.Error) {
		var ret V0040KillJobsRespJobError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042KillJobsRespJob) GetErrorOk() (*V0040KillJobsRespJobError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *V0042KillJobsRespJob) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given V0040KillJobsRespJobError and assigns it to the Error field.
func (o *V0042KillJobsRespJob) SetError(v V0040KillJobsRespJobError) {
	o.Error = &v
}

// GetStepId returns the StepId field value
func (o *V0042KillJobsRespJob) GetStepId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StepId
}

// GetStepIdOk returns a tuple with the StepId field value
// and a boolean to check if the value has been set.
func (o *V0042KillJobsRespJob) GetStepIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StepId, true
}

// SetStepId sets field value
func (o *V0042KillJobsRespJob) SetStepId(v string) {
	o.StepId = v
}

// GetJobId returns the JobId field value
func (o *V0042KillJobsRespJob) GetJobId() V0042Uint32NoValStruct {
	if o == nil {
		var ret V0042Uint32NoValStruct
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *V0042KillJobsRespJob) GetJobIdOk() (*V0042Uint32NoValStruct, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *V0042KillJobsRespJob) SetJobId(v V0042Uint32NoValStruct) {
	o.JobId = v
}

// GetFederation returns the Federation field value if set, zero value otherwise.
func (o *V0042KillJobsRespJob) GetFederation() V0040KillJobsRespJobFederation {
	if o == nil || IsNil(o.Federation) {
		var ret V0040KillJobsRespJobFederation
		return ret
	}
	return *o.Federation
}

// GetFederationOk returns a tuple with the Federation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042KillJobsRespJob) GetFederationOk() (*V0040KillJobsRespJobFederation, bool) {
	if o == nil || IsNil(o.Federation) {
		return nil, false
	}
	return o.Federation, true
}

// HasFederation returns a boolean if a field has been set.
func (o *V0042KillJobsRespJob) HasFederation() bool {
	if o != nil && !IsNil(o.Federation) {
		return true
	}

	return false
}

// SetFederation gets a reference to the given V0040KillJobsRespJobFederation and assigns it to the Federation field.
func (o *V0042KillJobsRespJob) SetFederation(v V0040KillJobsRespJobFederation) {
	o.Federation = &v
}

func (o V0042KillJobsRespJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042KillJobsRespJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	toSerialize["step_id"] = o.StepId
	toSerialize["job_id"] = o.JobId
	if !IsNil(o.Federation) {
		toSerialize["federation"] = o.Federation
	}
	return toSerialize, nil
}

func (o *V0042KillJobsRespJob) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"step_id",
		"job_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0042KillJobsRespJob := _V0042KillJobsRespJob{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV0042KillJobsRespJob)

	if err != nil {
		return err
	}

	*o = V0042KillJobsRespJob(varV0042KillJobsRespJob)

	return err
}

type NullableV0042KillJobsRespJob struct {
	value *V0042KillJobsRespJob
	isSet bool
}

func (v NullableV0042KillJobsRespJob) Get() *V0042KillJobsRespJob {
	return v.value
}

func (v *NullableV0042KillJobsRespJob) Set(val *V0042KillJobsRespJob) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042KillJobsRespJob) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042KillJobsRespJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042KillJobsRespJob(val *V0042KillJobsRespJob) *NullableV0042KillJobsRespJob {
	return &NullableV0042KillJobsRespJob{value: val, isSet: true}
}

func (v NullableV0042KillJobsRespJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042KillJobsRespJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


