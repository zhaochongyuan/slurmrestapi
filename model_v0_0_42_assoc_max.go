/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042AssocMax type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042AssocMax{}

// V0042AssocMax struct for V0042AssocMax
type V0042AssocMax struct {
	Jobs *V0042AssocMaxJobs `json:"jobs,omitempty"`
	Tres *V0042AssocMaxTres `json:"tres,omitempty"`
	Per *V0042AssocMaxPer `json:"per,omitempty"`
}

// NewV0042AssocMax instantiates a new V0042AssocMax object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042AssocMax() *V0042AssocMax {
	this := V0042AssocMax{}
	return &this
}

// NewV0042AssocMaxWithDefaults instantiates a new V0042AssocMax object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042AssocMaxWithDefaults() *V0042AssocMax {
	this := V0042AssocMax{}
	return &this
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *V0042AssocMax) GetJobs() V0042AssocMaxJobs {
	if o == nil || IsNil(o.Jobs) {
		var ret V0042AssocMaxJobs
		return ret
	}
	return *o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042AssocMax) GetJobsOk() (*V0042AssocMaxJobs, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *V0042AssocMax) HasJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given V0042AssocMaxJobs and assigns it to the Jobs field.
func (o *V0042AssocMax) SetJobs(v V0042AssocMaxJobs) {
	o.Jobs = &v
}

// GetTres returns the Tres field value if set, zero value otherwise.
func (o *V0042AssocMax) GetTres() V0042AssocMaxTres {
	if o == nil || IsNil(o.Tres) {
		var ret V0042AssocMaxTres
		return ret
	}
	return *o.Tres
}

// GetTresOk returns a tuple with the Tres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042AssocMax) GetTresOk() (*V0042AssocMaxTres, bool) {
	if o == nil || IsNil(o.Tres) {
		return nil, false
	}
	return o.Tres, true
}

// HasTres returns a boolean if a field has been set.
func (o *V0042AssocMax) HasTres() bool {
	if o != nil && !IsNil(o.Tres) {
		return true
	}

	return false
}

// SetTres gets a reference to the given V0042AssocMaxTres and assigns it to the Tres field.
func (o *V0042AssocMax) SetTres(v V0042AssocMaxTres) {
	o.Tres = &v
}

// GetPer returns the Per field value if set, zero value otherwise.
func (o *V0042AssocMax) GetPer() V0042AssocMaxPer {
	if o == nil || IsNil(o.Per) {
		var ret V0042AssocMaxPer
		return ret
	}
	return *o.Per
}

// GetPerOk returns a tuple with the Per field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042AssocMax) GetPerOk() (*V0042AssocMaxPer, bool) {
	if o == nil || IsNil(o.Per) {
		return nil, false
	}
	return o.Per, true
}

// HasPer returns a boolean if a field has been set.
func (o *V0042AssocMax) HasPer() bool {
	if o != nil && !IsNil(o.Per) {
		return true
	}

	return false
}

// SetPer gets a reference to the given V0042AssocMaxPer and assigns it to the Per field.
func (o *V0042AssocMax) SetPer(v V0042AssocMaxPer) {
	o.Per = &v
}

func (o V0042AssocMax) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042AssocMax) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	if !IsNil(o.Tres) {
		toSerialize["tres"] = o.Tres
	}
	if !IsNil(o.Per) {
		toSerialize["per"] = o.Per
	}
	return toSerialize, nil
}

type NullableV0042AssocMax struct {
	value *V0042AssocMax
	isSet bool
}

func (v NullableV0042AssocMax) Get() *V0042AssocMax {
	return v.value
}

func (v *NullableV0042AssocMax) Set(val *V0042AssocMax) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042AssocMax) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042AssocMax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042AssocMax(val *V0042AssocMax) *NullableV0042AssocMax {
	return &NullableV0042AssocMax{value: val, isSet: true}
}

func (v NullableV0042AssocMax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042AssocMax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


