/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042AssocMaxJobs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042AssocMaxJobs{}

// V0042AssocMaxJobs struct for V0042AssocMaxJobs
type V0042AssocMaxJobs struct {
	Per *V0042AssocMaxJobsPer `json:"per,omitempty"`
	Active *V0042Uint32NoValStruct `json:"active,omitempty"`
	Accruing *V0042Uint32NoValStruct `json:"accruing,omitempty"`
	Total *V0042Uint32NoValStruct `json:"total,omitempty"`
}

// NewV0042AssocMaxJobs instantiates a new V0042AssocMaxJobs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042AssocMaxJobs() *V0042AssocMaxJobs {
	this := V0042AssocMaxJobs{}
	return &this
}

// NewV0042AssocMaxJobsWithDefaults instantiates a new V0042AssocMaxJobs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042AssocMaxJobsWithDefaults() *V0042AssocMaxJobs {
	this := V0042AssocMaxJobs{}
	return &this
}

// GetPer returns the Per field value if set, zero value otherwise.
func (o *V0042AssocMaxJobs) GetPer() V0042AssocMaxJobsPer {
	if o == nil || IsNil(o.Per) {
		var ret V0042AssocMaxJobsPer
		return ret
	}
	return *o.Per
}

// GetPerOk returns a tuple with the Per field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042AssocMaxJobs) GetPerOk() (*V0042AssocMaxJobsPer, bool) {
	if o == nil || IsNil(o.Per) {
		return nil, false
	}
	return o.Per, true
}

// HasPer returns a boolean if a field has been set.
func (o *V0042AssocMaxJobs) HasPer() bool {
	if o != nil && !IsNil(o.Per) {
		return true
	}

	return false
}

// SetPer gets a reference to the given V0042AssocMaxJobsPer and assigns it to the Per field.
func (o *V0042AssocMaxJobs) SetPer(v V0042AssocMaxJobsPer) {
	o.Per = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *V0042AssocMaxJobs) GetActive() V0042Uint32NoValStruct {
	if o == nil || IsNil(o.Active) {
		var ret V0042Uint32NoValStruct
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042AssocMaxJobs) GetActiveOk() (*V0042Uint32NoValStruct, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *V0042AssocMaxJobs) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given V0042Uint32NoValStruct and assigns it to the Active field.
func (o *V0042AssocMaxJobs) SetActive(v V0042Uint32NoValStruct) {
	o.Active = &v
}

// GetAccruing returns the Accruing field value if set, zero value otherwise.
func (o *V0042AssocMaxJobs) GetAccruing() V0042Uint32NoValStruct {
	if o == nil || IsNil(o.Accruing) {
		var ret V0042Uint32NoValStruct
		return ret
	}
	return *o.Accruing
}

// GetAccruingOk returns a tuple with the Accruing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042AssocMaxJobs) GetAccruingOk() (*V0042Uint32NoValStruct, bool) {
	if o == nil || IsNil(o.Accruing) {
		return nil, false
	}
	return o.Accruing, true
}

// HasAccruing returns a boolean if a field has been set.
func (o *V0042AssocMaxJobs) HasAccruing() bool {
	if o != nil && !IsNil(o.Accruing) {
		return true
	}

	return false
}

// SetAccruing gets a reference to the given V0042Uint32NoValStruct and assigns it to the Accruing field.
func (o *V0042AssocMaxJobs) SetAccruing(v V0042Uint32NoValStruct) {
	o.Accruing = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *V0042AssocMaxJobs) GetTotal() V0042Uint32NoValStruct {
	if o == nil || IsNil(o.Total) {
		var ret V0042Uint32NoValStruct
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042AssocMaxJobs) GetTotalOk() (*V0042Uint32NoValStruct, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *V0042AssocMaxJobs) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given V0042Uint32NoValStruct and assigns it to the Total field.
func (o *V0042AssocMaxJobs) SetTotal(v V0042Uint32NoValStruct) {
	o.Total = &v
}

func (o V0042AssocMaxJobs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042AssocMaxJobs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Per) {
		toSerialize["per"] = o.Per
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Accruing) {
		toSerialize["accruing"] = o.Accruing
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableV0042AssocMaxJobs struct {
	value *V0042AssocMaxJobs
	isSet bool
}

func (v NullableV0042AssocMaxJobs) Get() *V0042AssocMaxJobs {
	return v.value
}

func (v *NullableV0042AssocMaxJobs) Set(val *V0042AssocMaxJobs) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042AssocMaxJobs) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042AssocMaxJobs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042AssocMaxJobs(val *V0042AssocMaxJobs) *NullableV0042AssocMaxJobs {
	return &NullableV0042AssocMaxJobs{value: val, isSet: true}
}

func (v NullableV0042AssocMaxJobs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042AssocMaxJobs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


