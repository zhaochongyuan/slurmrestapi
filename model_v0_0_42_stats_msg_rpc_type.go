/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V0042StatsMsgRpcType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042StatsMsgRpcType{}

// V0042StatsMsgRpcType struct for V0042StatsMsgRpcType
type V0042StatsMsgRpcType struct {
	// Message type as integer
	TypeId int32 `json:"type_id"`
	// Message type as string
	MessageType string `json:"message_type"`
	// Number of RPCs received
	Count int32 `json:"count"`
	// Number of RPCs queued
	Queued int32 `json:"queued"`
	// Number of RPCs dropped
	Dropped int64 `json:"dropped"`
	// Number of RPCs processed within the last RPC queue cycle
	CycleLast int32 `json:"cycle_last"`
	// Maximum number of RPCs processed within a RPC queue cycle since start
	CycleMax int32 `json:"cycle_max"`
	// Total time spent processing RPC in seconds
	TotalTime int64 `json:"total_time"`
	AverageTime V0042Uint64NoValStruct `json:"average_time"`
}

type _V0042StatsMsgRpcType V0042StatsMsgRpcType

// NewV0042StatsMsgRpcType instantiates a new V0042StatsMsgRpcType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042StatsMsgRpcType(typeId int32, messageType string, count int32, queued int32, dropped int64, cycleLast int32, cycleMax int32, totalTime int64, averageTime V0042Uint64NoValStruct) *V0042StatsMsgRpcType {
	this := V0042StatsMsgRpcType{}
	this.TypeId = typeId
	this.MessageType = messageType
	this.Count = count
	this.Queued = queued
	this.Dropped = dropped
	this.CycleLast = cycleLast
	this.CycleMax = cycleMax
	this.TotalTime = totalTime
	this.AverageTime = averageTime
	return &this
}

// NewV0042StatsMsgRpcTypeWithDefaults instantiates a new V0042StatsMsgRpcType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042StatsMsgRpcTypeWithDefaults() *V0042StatsMsgRpcType {
	this := V0042StatsMsgRpcType{}
	return &this
}

// GetTypeId returns the TypeId field value
func (o *V0042StatsMsgRpcType) GetTypeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *V0042StatsMsgRpcType) GetTypeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *V0042StatsMsgRpcType) SetTypeId(v int32) {
	o.TypeId = v
}

// GetMessageType returns the MessageType field value
func (o *V0042StatsMsgRpcType) GetMessageType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageType
}

// GetMessageTypeOk returns a tuple with the MessageType field value
// and a boolean to check if the value has been set.
func (o *V0042StatsMsgRpcType) GetMessageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageType, true
}

// SetMessageType sets field value
func (o *V0042StatsMsgRpcType) SetMessageType(v string) {
	o.MessageType = v
}

// GetCount returns the Count field value
func (o *V0042StatsMsgRpcType) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *V0042StatsMsgRpcType) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *V0042StatsMsgRpcType) SetCount(v int32) {
	o.Count = v
}

// GetQueued returns the Queued field value
func (o *V0042StatsMsgRpcType) GetQueued() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Queued
}

// GetQueuedOk returns a tuple with the Queued field value
// and a boolean to check if the value has been set.
func (o *V0042StatsMsgRpcType) GetQueuedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Queued, true
}

// SetQueued sets field value
func (o *V0042StatsMsgRpcType) SetQueued(v int32) {
	o.Queued = v
}

// GetDropped returns the Dropped field value
func (o *V0042StatsMsgRpcType) GetDropped() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Dropped
}

// GetDroppedOk returns a tuple with the Dropped field value
// and a boolean to check if the value has been set.
func (o *V0042StatsMsgRpcType) GetDroppedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dropped, true
}

// SetDropped sets field value
func (o *V0042StatsMsgRpcType) SetDropped(v int64) {
	o.Dropped = v
}

// GetCycleLast returns the CycleLast field value
func (o *V0042StatsMsgRpcType) GetCycleLast() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CycleLast
}

// GetCycleLastOk returns a tuple with the CycleLast field value
// and a boolean to check if the value has been set.
func (o *V0042StatsMsgRpcType) GetCycleLastOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CycleLast, true
}

// SetCycleLast sets field value
func (o *V0042StatsMsgRpcType) SetCycleLast(v int32) {
	o.CycleLast = v
}

// GetCycleMax returns the CycleMax field value
func (o *V0042StatsMsgRpcType) GetCycleMax() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CycleMax
}

// GetCycleMaxOk returns a tuple with the CycleMax field value
// and a boolean to check if the value has been set.
func (o *V0042StatsMsgRpcType) GetCycleMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CycleMax, true
}

// SetCycleMax sets field value
func (o *V0042StatsMsgRpcType) SetCycleMax(v int32) {
	o.CycleMax = v
}

// GetTotalTime returns the TotalTime field value
func (o *V0042StatsMsgRpcType) GetTotalTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalTime
}

// GetTotalTimeOk returns a tuple with the TotalTime field value
// and a boolean to check if the value has been set.
func (o *V0042StatsMsgRpcType) GetTotalTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTime, true
}

// SetTotalTime sets field value
func (o *V0042StatsMsgRpcType) SetTotalTime(v int64) {
	o.TotalTime = v
}

// GetAverageTime returns the AverageTime field value
func (o *V0042StatsMsgRpcType) GetAverageTime() V0042Uint64NoValStruct {
	if o == nil {
		var ret V0042Uint64NoValStruct
		return ret
	}

	return o.AverageTime
}

// GetAverageTimeOk returns a tuple with the AverageTime field value
// and a boolean to check if the value has been set.
func (o *V0042StatsMsgRpcType) GetAverageTimeOk() (*V0042Uint64NoValStruct, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AverageTime, true
}

// SetAverageTime sets field value
func (o *V0042StatsMsgRpcType) SetAverageTime(v V0042Uint64NoValStruct) {
	o.AverageTime = v
}

func (o V0042StatsMsgRpcType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042StatsMsgRpcType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type_id"] = o.TypeId
	toSerialize["message_type"] = o.MessageType
	toSerialize["count"] = o.Count
	toSerialize["queued"] = o.Queued
	toSerialize["dropped"] = o.Dropped
	toSerialize["cycle_last"] = o.CycleLast
	toSerialize["cycle_max"] = o.CycleMax
	toSerialize["total_time"] = o.TotalTime
	toSerialize["average_time"] = o.AverageTime
	return toSerialize, nil
}

func (o *V0042StatsMsgRpcType) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type_id",
		"message_type",
		"count",
		"queued",
		"dropped",
		"cycle_last",
		"cycle_max",
		"total_time",
		"average_time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0042StatsMsgRpcType := _V0042StatsMsgRpcType{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV0042StatsMsgRpcType)

	if err != nil {
		return err
	}

	*o = V0042StatsMsgRpcType(varV0042StatsMsgRpcType)

	return err
}

type NullableV0042StatsMsgRpcType struct {
	value *V0042StatsMsgRpcType
	isSet bool
}

func (v NullableV0042StatsMsgRpcType) Get() *V0042StatsMsgRpcType {
	return v.value
}

func (v *NullableV0042StatsMsgRpcType) Set(val *V0042StatsMsgRpcType) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042StatsMsgRpcType) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042StatsMsgRpcType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042StatsMsgRpcType(val *V0042StatsMsgRpcType) *NullableV0042StatsMsgRpcType {
	return &NullableV0042StatsMsgRpcType{value: val, isSet: true}
}

func (v NullableV0042StatsMsgRpcType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042StatsMsgRpcType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


