/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V0042JobResCore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042JobResCore{}

// V0042JobResCore struct for V0042JobResCore
type V0042JobResCore struct {
	// Core index
	Index int32 `json:"index"`
	Status []string `json:"status"`
}

type _V0042JobResCore V0042JobResCore

// NewV0042JobResCore instantiates a new V0042JobResCore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042JobResCore(index int32, status []string) *V0042JobResCore {
	this := V0042JobResCore{}
	this.Index = index
	this.Status = status
	return &this
}

// NewV0042JobResCoreWithDefaults instantiates a new V0042JobResCore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042JobResCoreWithDefaults() *V0042JobResCore {
	this := V0042JobResCore{}
	return &this
}

// GetIndex returns the Index field value
func (o *V0042JobResCore) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *V0042JobResCore) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *V0042JobResCore) SetIndex(v int32) {
	o.Index = v
}

// GetStatus returns the Status field value
func (o *V0042JobResCore) GetStatus() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *V0042JobResCore) GetStatusOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status, true
}

// SetStatus sets field value
func (o *V0042JobResCore) SetStatus(v []string) {
	o.Status = v
}

func (o V0042JobResCore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042JobResCore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["index"] = o.Index
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *V0042JobResCore) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"index",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0042JobResCore := _V0042JobResCore{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV0042JobResCore)

	if err != nil {
		return err
	}

	*o = V0042JobResCore(varV0042JobResCore)

	return err
}

type NullableV0042JobResCore struct {
	value *V0042JobResCore
	isSet bool
}

func (v NullableV0042JobResCore) Get() *V0042JobResCore {
	return v.value
}

func (v *NullableV0042JobResCore) Set(val *V0042JobResCore) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042JobResCore) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042JobResCore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042JobResCore(val *V0042JobResCore) *NullableV0042JobResCore {
	return &NullableV0042JobResCore{value: val, isSet: true}
}

func (v NullableV0042JobResCore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042JobResCore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


