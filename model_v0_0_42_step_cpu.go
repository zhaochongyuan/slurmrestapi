/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042StepCPU type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042StepCPU{}

// V0042StepCPU struct for V0042StepCPU
type V0042StepCPU struct {
	RequestedFrequency *V0042StepCPURequestedFrequency `json:"requested_frequency,omitempty"`
	// Requested CPU frequency governor in kHz
	Governor *string `json:"governor,omitempty"`
}

// NewV0042StepCPU instantiates a new V0042StepCPU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042StepCPU() *V0042StepCPU {
	this := V0042StepCPU{}
	return &this
}

// NewV0042StepCPUWithDefaults instantiates a new V0042StepCPU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042StepCPUWithDefaults() *V0042StepCPU {
	this := V0042StepCPU{}
	return &this
}

// GetRequestedFrequency returns the RequestedFrequency field value if set, zero value otherwise.
func (o *V0042StepCPU) GetRequestedFrequency() V0042StepCPURequestedFrequency {
	if o == nil || IsNil(o.RequestedFrequency) {
		var ret V0042StepCPURequestedFrequency
		return ret
	}
	return *o.RequestedFrequency
}

// GetRequestedFrequencyOk returns a tuple with the RequestedFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042StepCPU) GetRequestedFrequencyOk() (*V0042StepCPURequestedFrequency, bool) {
	if o == nil || IsNil(o.RequestedFrequency) {
		return nil, false
	}
	return o.RequestedFrequency, true
}

// HasRequestedFrequency returns a boolean if a field has been set.
func (o *V0042StepCPU) HasRequestedFrequency() bool {
	if o != nil && !IsNil(o.RequestedFrequency) {
		return true
	}

	return false
}

// SetRequestedFrequency gets a reference to the given V0042StepCPURequestedFrequency and assigns it to the RequestedFrequency field.
func (o *V0042StepCPU) SetRequestedFrequency(v V0042StepCPURequestedFrequency) {
	o.RequestedFrequency = &v
}

// GetGovernor returns the Governor field value if set, zero value otherwise.
func (o *V0042StepCPU) GetGovernor() string {
	if o == nil || IsNil(o.Governor) {
		var ret string
		return ret
	}
	return *o.Governor
}

// GetGovernorOk returns a tuple with the Governor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042StepCPU) GetGovernorOk() (*string, bool) {
	if o == nil || IsNil(o.Governor) {
		return nil, false
	}
	return o.Governor, true
}

// HasGovernor returns a boolean if a field has been set.
func (o *V0042StepCPU) HasGovernor() bool {
	if o != nil && !IsNil(o.Governor) {
		return true
	}

	return false
}

// SetGovernor gets a reference to the given string and assigns it to the Governor field.
func (o *V0042StepCPU) SetGovernor(v string) {
	o.Governor = &v
}

func (o V0042StepCPU) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042StepCPU) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestedFrequency) {
		toSerialize["requested_frequency"] = o.RequestedFrequency
	}
	if !IsNil(o.Governor) {
		toSerialize["governor"] = o.Governor
	}
	return toSerialize, nil
}

type NullableV0042StepCPU struct {
	value *V0042StepCPU
	isSet bool
}

func (v NullableV0042StepCPU) Get() *V0042StepCPU {
	return v.value
}

func (v *NullableV0042StepCPU) Set(val *V0042StepCPU) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042StepCPU) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042StepCPU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042StepCPU(val *V0042StepCPU) *NullableV0042StepCPU {
	return &NullableV0042StepCPU{value: val, isSet: true}
}

func (v NullableV0042StepCPU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042StepCPU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


