/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042PartitionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042PartitionInfo{}

// V0042PartitionInfo struct for V0042PartitionInfo
type V0042PartitionInfo struct {
	Nodes *V0040PartitionInfoNodes `json:"nodes,omitempty"`
	Accounts *V0040PartitionInfoAccounts `json:"accounts,omitempty"`
	Groups *V0040PartitionInfoGroups `json:"groups,omitempty"`
	Qos *V0040PartitionInfoQos `json:"qos,omitempty"`
	// Alternate
	Alternate *string `json:"alternate,omitempty"`
	Tres *V0040PartitionInfoTres `json:"tres,omitempty"`
	// Cluster name
	Cluster *string `json:"cluster,omitempty"`
	SelectType []string `json:"select_type,omitempty"`
	Cpus *V0040PartitionInfoCpus `json:"cpus,omitempty"`
	Defaults *V0042PartitionInfoDefaults `json:"defaults,omitempty"`
	// GraceTime
	GraceTime *int32 `json:"grace_time,omitempty"`
	Maximums *V0042PartitionInfoMaximums `json:"maximums,omitempty"`
	Minimums *V0040PartitionInfoMinimums `json:"minimums,omitempty"`
	// PartitionName
	Name *string `json:"name,omitempty"`
	// NodeSets
	NodeSets *string `json:"node_sets,omitempty"`
	Priority *V0040PartitionInfoPriority `json:"priority,omitempty"`
	Timeouts *V0042PartitionInfoTimeouts `json:"timeouts,omitempty"`
	Partition *V0042PartitionInfoPartition `json:"partition,omitempty"`
	SuspendTime *V0042Uint32NoValStruct `json:"suspend_time,omitempty"`
}

// NewV0042PartitionInfo instantiates a new V0042PartitionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042PartitionInfo() *V0042PartitionInfo {
	this := V0042PartitionInfo{}
	return &this
}

// NewV0042PartitionInfoWithDefaults instantiates a new V0042PartitionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042PartitionInfoWithDefaults() *V0042PartitionInfo {
	this := V0042PartitionInfo{}
	return &this
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetNodes() V0040PartitionInfoNodes {
	if o == nil || IsNil(o.Nodes) {
		var ret V0040PartitionInfoNodes
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetNodesOk() (*V0040PartitionInfoNodes, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given V0040PartitionInfoNodes and assigns it to the Nodes field.
func (o *V0042PartitionInfo) SetNodes(v V0040PartitionInfoNodes) {
	o.Nodes = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetAccounts() V0040PartitionInfoAccounts {
	if o == nil || IsNil(o.Accounts) {
		var ret V0040PartitionInfoAccounts
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetAccountsOk() (*V0040PartitionInfoAccounts, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given V0040PartitionInfoAccounts and assigns it to the Accounts field.
func (o *V0042PartitionInfo) SetAccounts(v V0040PartitionInfoAccounts) {
	o.Accounts = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetGroups() V0040PartitionInfoGroups {
	if o == nil || IsNil(o.Groups) {
		var ret V0040PartitionInfoGroups
		return ret
	}
	return *o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetGroupsOk() (*V0040PartitionInfoGroups, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given V0040PartitionInfoGroups and assigns it to the Groups field.
func (o *V0042PartitionInfo) SetGroups(v V0040PartitionInfoGroups) {
	o.Groups = &v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetQos() V0040PartitionInfoQos {
	if o == nil || IsNil(o.Qos) {
		var ret V0040PartitionInfoQos
		return ret
	}
	return *o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetQosOk() (*V0040PartitionInfoQos, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given V0040PartitionInfoQos and assigns it to the Qos field.
func (o *V0042PartitionInfo) SetQos(v V0040PartitionInfoQos) {
	o.Qos = &v
}

// GetAlternate returns the Alternate field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetAlternate() string {
	if o == nil || IsNil(o.Alternate) {
		var ret string
		return ret
	}
	return *o.Alternate
}

// GetAlternateOk returns a tuple with the Alternate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetAlternateOk() (*string, bool) {
	if o == nil || IsNil(o.Alternate) {
		return nil, false
	}
	return o.Alternate, true
}

// HasAlternate returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasAlternate() bool {
	if o != nil && !IsNil(o.Alternate) {
		return true
	}

	return false
}

// SetAlternate gets a reference to the given string and assigns it to the Alternate field.
func (o *V0042PartitionInfo) SetAlternate(v string) {
	o.Alternate = &v
}

// GetTres returns the Tres field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetTres() V0040PartitionInfoTres {
	if o == nil || IsNil(o.Tres) {
		var ret V0040PartitionInfoTres
		return ret
	}
	return *o.Tres
}

// GetTresOk returns a tuple with the Tres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetTresOk() (*V0040PartitionInfoTres, bool) {
	if o == nil || IsNil(o.Tres) {
		return nil, false
	}
	return o.Tres, true
}

// HasTres returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasTres() bool {
	if o != nil && !IsNil(o.Tres) {
		return true
	}

	return false
}

// SetTres gets a reference to the given V0040PartitionInfoTres and assigns it to the Tres field.
func (o *V0042PartitionInfo) SetTres(v V0040PartitionInfoTres) {
	o.Tres = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetCluster() string {
	if o == nil || IsNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetClusterOk() (*string, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *V0042PartitionInfo) SetCluster(v string) {
	o.Cluster = &v
}

// GetSelectType returns the SelectType field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetSelectType() []string {
	if o == nil || IsNil(o.SelectType) {
		var ret []string
		return ret
	}
	return o.SelectType
}

// GetSelectTypeOk returns a tuple with the SelectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetSelectTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.SelectType) {
		return nil, false
	}
	return o.SelectType, true
}

// HasSelectType returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasSelectType() bool {
	if o != nil && !IsNil(o.SelectType) {
		return true
	}

	return false
}

// SetSelectType gets a reference to the given []string and assigns it to the SelectType field.
func (o *V0042PartitionInfo) SetSelectType(v []string) {
	o.SelectType = v
}

// GetCpus returns the Cpus field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetCpus() V0040PartitionInfoCpus {
	if o == nil || IsNil(o.Cpus) {
		var ret V0040PartitionInfoCpus
		return ret
	}
	return *o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetCpusOk() (*V0040PartitionInfoCpus, bool) {
	if o == nil || IsNil(o.Cpus) {
		return nil, false
	}
	return o.Cpus, true
}

// HasCpus returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasCpus() bool {
	if o != nil && !IsNil(o.Cpus) {
		return true
	}

	return false
}

// SetCpus gets a reference to the given V0040PartitionInfoCpus and assigns it to the Cpus field.
func (o *V0042PartitionInfo) SetCpus(v V0040PartitionInfoCpus) {
	o.Cpus = &v
}

// GetDefaults returns the Defaults field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetDefaults() V0042PartitionInfoDefaults {
	if o == nil || IsNil(o.Defaults) {
		var ret V0042PartitionInfoDefaults
		return ret
	}
	return *o.Defaults
}

// GetDefaultsOk returns a tuple with the Defaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetDefaultsOk() (*V0042PartitionInfoDefaults, bool) {
	if o == nil || IsNil(o.Defaults) {
		return nil, false
	}
	return o.Defaults, true
}

// HasDefaults returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasDefaults() bool {
	if o != nil && !IsNil(o.Defaults) {
		return true
	}

	return false
}

// SetDefaults gets a reference to the given V0042PartitionInfoDefaults and assigns it to the Defaults field.
func (o *V0042PartitionInfo) SetDefaults(v V0042PartitionInfoDefaults) {
	o.Defaults = &v
}

// GetGraceTime returns the GraceTime field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetGraceTime() int32 {
	if o == nil || IsNil(o.GraceTime) {
		var ret int32
		return ret
	}
	return *o.GraceTime
}

// GetGraceTimeOk returns a tuple with the GraceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetGraceTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.GraceTime) {
		return nil, false
	}
	return o.GraceTime, true
}

// HasGraceTime returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasGraceTime() bool {
	if o != nil && !IsNil(o.GraceTime) {
		return true
	}

	return false
}

// SetGraceTime gets a reference to the given int32 and assigns it to the GraceTime field.
func (o *V0042PartitionInfo) SetGraceTime(v int32) {
	o.GraceTime = &v
}

// GetMaximums returns the Maximums field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetMaximums() V0042PartitionInfoMaximums {
	if o == nil || IsNil(o.Maximums) {
		var ret V0042PartitionInfoMaximums
		return ret
	}
	return *o.Maximums
}

// GetMaximumsOk returns a tuple with the Maximums field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetMaximumsOk() (*V0042PartitionInfoMaximums, bool) {
	if o == nil || IsNil(o.Maximums) {
		return nil, false
	}
	return o.Maximums, true
}

// HasMaximums returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasMaximums() bool {
	if o != nil && !IsNil(o.Maximums) {
		return true
	}

	return false
}

// SetMaximums gets a reference to the given V0042PartitionInfoMaximums and assigns it to the Maximums field.
func (o *V0042PartitionInfo) SetMaximums(v V0042PartitionInfoMaximums) {
	o.Maximums = &v
}

// GetMinimums returns the Minimums field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetMinimums() V0040PartitionInfoMinimums {
	if o == nil || IsNil(o.Minimums) {
		var ret V0040PartitionInfoMinimums
		return ret
	}
	return *o.Minimums
}

// GetMinimumsOk returns a tuple with the Minimums field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetMinimumsOk() (*V0040PartitionInfoMinimums, bool) {
	if o == nil || IsNil(o.Minimums) {
		return nil, false
	}
	return o.Minimums, true
}

// HasMinimums returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasMinimums() bool {
	if o != nil && !IsNil(o.Minimums) {
		return true
	}

	return false
}

// SetMinimums gets a reference to the given V0040PartitionInfoMinimums and assigns it to the Minimums field.
func (o *V0042PartitionInfo) SetMinimums(v V0040PartitionInfoMinimums) {
	o.Minimums = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V0042PartitionInfo) SetName(v string) {
	o.Name = &v
}

// GetNodeSets returns the NodeSets field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetNodeSets() string {
	if o == nil || IsNil(o.NodeSets) {
		var ret string
		return ret
	}
	return *o.NodeSets
}

// GetNodeSetsOk returns a tuple with the NodeSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetNodeSetsOk() (*string, bool) {
	if o == nil || IsNil(o.NodeSets) {
		return nil, false
	}
	return o.NodeSets, true
}

// HasNodeSets returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasNodeSets() bool {
	if o != nil && !IsNil(o.NodeSets) {
		return true
	}

	return false
}

// SetNodeSets gets a reference to the given string and assigns it to the NodeSets field.
func (o *V0042PartitionInfo) SetNodeSets(v string) {
	o.NodeSets = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetPriority() V0040PartitionInfoPriority {
	if o == nil || IsNil(o.Priority) {
		var ret V0040PartitionInfoPriority
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetPriorityOk() (*V0040PartitionInfoPriority, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given V0040PartitionInfoPriority and assigns it to the Priority field.
func (o *V0042PartitionInfo) SetPriority(v V0040PartitionInfoPriority) {
	o.Priority = &v
}

// GetTimeouts returns the Timeouts field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetTimeouts() V0042PartitionInfoTimeouts {
	if o == nil || IsNil(o.Timeouts) {
		var ret V0042PartitionInfoTimeouts
		return ret
	}
	return *o.Timeouts
}

// GetTimeoutsOk returns a tuple with the Timeouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetTimeoutsOk() (*V0042PartitionInfoTimeouts, bool) {
	if o == nil || IsNil(o.Timeouts) {
		return nil, false
	}
	return o.Timeouts, true
}

// HasTimeouts returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasTimeouts() bool {
	if o != nil && !IsNil(o.Timeouts) {
		return true
	}

	return false
}

// SetTimeouts gets a reference to the given V0042PartitionInfoTimeouts and assigns it to the Timeouts field.
func (o *V0042PartitionInfo) SetTimeouts(v V0042PartitionInfoTimeouts) {
	o.Timeouts = &v
}

// GetPartition returns the Partition field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetPartition() V0042PartitionInfoPartition {
	if o == nil || IsNil(o.Partition) {
		var ret V0042PartitionInfoPartition
		return ret
	}
	return *o.Partition
}

// GetPartitionOk returns a tuple with the Partition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetPartitionOk() (*V0042PartitionInfoPartition, bool) {
	if o == nil || IsNil(o.Partition) {
		return nil, false
	}
	return o.Partition, true
}

// HasPartition returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasPartition() bool {
	if o != nil && !IsNil(o.Partition) {
		return true
	}

	return false
}

// SetPartition gets a reference to the given V0042PartitionInfoPartition and assigns it to the Partition field.
func (o *V0042PartitionInfo) SetPartition(v V0042PartitionInfoPartition) {
	o.Partition = &v
}

// GetSuspendTime returns the SuspendTime field value if set, zero value otherwise.
func (o *V0042PartitionInfo) GetSuspendTime() V0042Uint32NoValStruct {
	if o == nil || IsNil(o.SuspendTime) {
		var ret V0042Uint32NoValStruct
		return ret
	}
	return *o.SuspendTime
}

// GetSuspendTimeOk returns a tuple with the SuspendTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042PartitionInfo) GetSuspendTimeOk() (*V0042Uint32NoValStruct, bool) {
	if o == nil || IsNil(o.SuspendTime) {
		return nil, false
	}
	return o.SuspendTime, true
}

// HasSuspendTime returns a boolean if a field has been set.
func (o *V0042PartitionInfo) HasSuspendTime() bool {
	if o != nil && !IsNil(o.SuspendTime) {
		return true
	}

	return false
}

// SetSuspendTime gets a reference to the given V0042Uint32NoValStruct and assigns it to the SuspendTime field.
func (o *V0042PartitionInfo) SetSuspendTime(v V0042Uint32NoValStruct) {
	o.SuspendTime = &v
}

func (o V0042PartitionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042PartitionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	if !IsNil(o.Alternate) {
		toSerialize["alternate"] = o.Alternate
	}
	if !IsNil(o.Tres) {
		toSerialize["tres"] = o.Tres
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.SelectType) {
		toSerialize["select_type"] = o.SelectType
	}
	if !IsNil(o.Cpus) {
		toSerialize["cpus"] = o.Cpus
	}
	if !IsNil(o.Defaults) {
		toSerialize["defaults"] = o.Defaults
	}
	if !IsNil(o.GraceTime) {
		toSerialize["grace_time"] = o.GraceTime
	}
	if !IsNil(o.Maximums) {
		toSerialize["maximums"] = o.Maximums
	}
	if !IsNil(o.Minimums) {
		toSerialize["minimums"] = o.Minimums
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NodeSets) {
		toSerialize["node_sets"] = o.NodeSets
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Timeouts) {
		toSerialize["timeouts"] = o.Timeouts
	}
	if !IsNil(o.Partition) {
		toSerialize["partition"] = o.Partition
	}
	if !IsNil(o.SuspendTime) {
		toSerialize["suspend_time"] = o.SuspendTime
	}
	return toSerialize, nil
}

type NullableV0042PartitionInfo struct {
	value *V0042PartitionInfo
	isSet bool
}

func (v NullableV0042PartitionInfo) Get() *V0042PartitionInfo {
	return v.value
}

func (v *NullableV0042PartitionInfo) Set(val *V0042PartitionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042PartitionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042PartitionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042PartitionInfo(val *V0042PartitionInfo) *NullableV0042PartitionInfo {
	return &NullableV0042PartitionInfo{value: val, isSet: true}
}

func (v NullableV0042PartitionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042PartitionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


