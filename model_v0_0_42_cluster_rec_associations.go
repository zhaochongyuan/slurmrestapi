/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042ClusterRecAssociations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042ClusterRecAssociations{}

// V0042ClusterRecAssociations struct for V0042ClusterRecAssociations
type V0042ClusterRecAssociations struct {
	Root *V0042AssocShort `json:"root,omitempty"`
}

// NewV0042ClusterRecAssociations instantiates a new V0042ClusterRecAssociations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042ClusterRecAssociations() *V0042ClusterRecAssociations {
	this := V0042ClusterRecAssociations{}
	return &this
}

// NewV0042ClusterRecAssociationsWithDefaults instantiates a new V0042ClusterRecAssociations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042ClusterRecAssociationsWithDefaults() *V0042ClusterRecAssociations {
	this := V0042ClusterRecAssociations{}
	return &this
}

// GetRoot returns the Root field value if set, zero value otherwise.
func (o *V0042ClusterRecAssociations) GetRoot() V0042AssocShort {
	if o == nil || IsNil(o.Root) {
		var ret V0042AssocShort
		return ret
	}
	return *o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042ClusterRecAssociations) GetRootOk() (*V0042AssocShort, bool) {
	if o == nil || IsNil(o.Root) {
		return nil, false
	}
	return o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *V0042ClusterRecAssociations) HasRoot() bool {
	if o != nil && !IsNil(o.Root) {
		return true
	}

	return false
}

// SetRoot gets a reference to the given V0042AssocShort and assigns it to the Root field.
func (o *V0042ClusterRecAssociations) SetRoot(v V0042AssocShort) {
	o.Root = &v
}

func (o V0042ClusterRecAssociations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042ClusterRecAssociations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Root) {
		toSerialize["root"] = o.Root
	}
	return toSerialize, nil
}

type NullableV0042ClusterRecAssociations struct {
	value *V0042ClusterRecAssociations
	isSet bool
}

func (v NullableV0042ClusterRecAssociations) Get() *V0042ClusterRecAssociations {
	return v.value
}

func (v *NullableV0042ClusterRecAssociations) Set(val *V0042ClusterRecAssociations) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042ClusterRecAssociations) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042ClusterRecAssociations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042ClusterRecAssociations(val *V0042ClusterRecAssociations) *NullableV0042ClusterRecAssociations {
	return &NullableV0042ClusterRecAssociations{value: val, isSet: true}
}

func (v NullableV0042ClusterRecAssociations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042ClusterRecAssociations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


