/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042StepStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042StepStatistics{}

// V0042StepStatistics struct for V0042StepStatistics
type V0042StepStatistics struct {
	CPU *V0040StepStatisticsCPU `json:"CPU,omitempty"`
	Energy *V0042StepStatisticsEnergy `json:"energy,omitempty"`
}

// NewV0042StepStatistics instantiates a new V0042StepStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042StepStatistics() *V0042StepStatistics {
	this := V0042StepStatistics{}
	return &this
}

// NewV0042StepStatisticsWithDefaults instantiates a new V0042StepStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042StepStatisticsWithDefaults() *V0042StepStatistics {
	this := V0042StepStatistics{}
	return &this
}

// GetCPU returns the CPU field value if set, zero value otherwise.
func (o *V0042StepStatistics) GetCPU() V0040StepStatisticsCPU {
	if o == nil || IsNil(o.CPU) {
		var ret V0040StepStatisticsCPU
		return ret
	}
	return *o.CPU
}

// GetCPUOk returns a tuple with the CPU field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042StepStatistics) GetCPUOk() (*V0040StepStatisticsCPU, bool) {
	if o == nil || IsNil(o.CPU) {
		return nil, false
	}
	return o.CPU, true
}

// HasCPU returns a boolean if a field has been set.
func (o *V0042StepStatistics) HasCPU() bool {
	if o != nil && !IsNil(o.CPU) {
		return true
	}

	return false
}

// SetCPU gets a reference to the given V0040StepStatisticsCPU and assigns it to the CPU field.
func (o *V0042StepStatistics) SetCPU(v V0040StepStatisticsCPU) {
	o.CPU = &v
}

// GetEnergy returns the Energy field value if set, zero value otherwise.
func (o *V0042StepStatistics) GetEnergy() V0042StepStatisticsEnergy {
	if o == nil || IsNil(o.Energy) {
		var ret V0042StepStatisticsEnergy
		return ret
	}
	return *o.Energy
}

// GetEnergyOk returns a tuple with the Energy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042StepStatistics) GetEnergyOk() (*V0042StepStatisticsEnergy, bool) {
	if o == nil || IsNil(o.Energy) {
		return nil, false
	}
	return o.Energy, true
}

// HasEnergy returns a boolean if a field has been set.
func (o *V0042StepStatistics) HasEnergy() bool {
	if o != nil && !IsNil(o.Energy) {
		return true
	}

	return false
}

// SetEnergy gets a reference to the given V0042StepStatisticsEnergy and assigns it to the Energy field.
func (o *V0042StepStatistics) SetEnergy(v V0042StepStatisticsEnergy) {
	o.Energy = &v
}

func (o V0042StepStatistics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042StepStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CPU) {
		toSerialize["CPU"] = o.CPU
	}
	if !IsNil(o.Energy) {
		toSerialize["energy"] = o.Energy
	}
	return toSerialize, nil
}

type NullableV0042StepStatistics struct {
	value *V0042StepStatistics
	isSet bool
}

func (v NullableV0042StepStatistics) Get() *V0042StepStatistics {
	return v.value
}

func (v *NullableV0042StepStatistics) Set(val *V0042StepStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042StepStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042StepStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042StepStatistics(val *V0042StepStatistics) *NullableV0042StepStatistics {
	return &NullableV0042StepStatistics{value: val, isSet: true}
}

func (v NullableV0042StepStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042StepStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


