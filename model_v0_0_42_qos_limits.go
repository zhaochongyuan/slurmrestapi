/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
)

// checks if the V0042QosLimits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042QosLimits{}

// V0042QosLimits struct for V0042QosLimits
type V0042QosLimits struct {
	// GraceTime
	GraceTime *int32 `json:"grace_time,omitempty"`
	Max *V0042QosLimitsMax `json:"max,omitempty"`
	Factor *V0042Float64NoValStruct `json:"factor,omitempty"`
	Min *V0042QosLimitsMin `json:"min,omitempty"`
}

// NewV0042QosLimits instantiates a new V0042QosLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042QosLimits() *V0042QosLimits {
	this := V0042QosLimits{}
	return &this
}

// NewV0042QosLimitsWithDefaults instantiates a new V0042QosLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042QosLimitsWithDefaults() *V0042QosLimits {
	this := V0042QosLimits{}
	return &this
}

// GetGraceTime returns the GraceTime field value if set, zero value otherwise.
func (o *V0042QosLimits) GetGraceTime() int32 {
	if o == nil || IsNil(o.GraceTime) {
		var ret int32
		return ret
	}
	return *o.GraceTime
}

// GetGraceTimeOk returns a tuple with the GraceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042QosLimits) GetGraceTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.GraceTime) {
		return nil, false
	}
	return o.GraceTime, true
}

// HasGraceTime returns a boolean if a field has been set.
func (o *V0042QosLimits) HasGraceTime() bool {
	if o != nil && !IsNil(o.GraceTime) {
		return true
	}

	return false
}

// SetGraceTime gets a reference to the given int32 and assigns it to the GraceTime field.
func (o *V0042QosLimits) SetGraceTime(v int32) {
	o.GraceTime = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *V0042QosLimits) GetMax() V0042QosLimitsMax {
	if o == nil || IsNil(o.Max) {
		var ret V0042QosLimitsMax
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042QosLimits) GetMaxOk() (*V0042QosLimitsMax, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *V0042QosLimits) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given V0042QosLimitsMax and assigns it to the Max field.
func (o *V0042QosLimits) SetMax(v V0042QosLimitsMax) {
	o.Max = &v
}

// GetFactor returns the Factor field value if set, zero value otherwise.
func (o *V0042QosLimits) GetFactor() V0042Float64NoValStruct {
	if o == nil || IsNil(o.Factor) {
		var ret V0042Float64NoValStruct
		return ret
	}
	return *o.Factor
}

// GetFactorOk returns a tuple with the Factor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042QosLimits) GetFactorOk() (*V0042Float64NoValStruct, bool) {
	if o == nil || IsNil(o.Factor) {
		return nil, false
	}
	return o.Factor, true
}

// HasFactor returns a boolean if a field has been set.
func (o *V0042QosLimits) HasFactor() bool {
	if o != nil && !IsNil(o.Factor) {
		return true
	}

	return false
}

// SetFactor gets a reference to the given V0042Float64NoValStruct and assigns it to the Factor field.
func (o *V0042QosLimits) SetFactor(v V0042Float64NoValStruct) {
	o.Factor = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *V0042QosLimits) GetMin() V0042QosLimitsMin {
	if o == nil || IsNil(o.Min) {
		var ret V0042QosLimitsMin
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042QosLimits) GetMinOk() (*V0042QosLimitsMin, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *V0042QosLimits) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given V0042QosLimitsMin and assigns it to the Min field.
func (o *V0042QosLimits) SetMin(v V0042QosLimitsMin) {
	o.Min = &v
}

func (o V0042QosLimits) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042QosLimits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GraceTime) {
		toSerialize["grace_time"] = o.GraceTime
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Factor) {
		toSerialize["factor"] = o.Factor
	}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	return toSerialize, nil
}

type NullableV0042QosLimits struct {
	value *V0042QosLimits
	isSet bool
}

func (v NullableV0042QosLimits) Get() *V0042QosLimits {
	return v.value
}

func (v *NullableV0042QosLimits) Set(val *V0042QosLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042QosLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042QosLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042QosLimits(val *V0042QosLimits) *NullableV0042QosLimits {
	return &NullableV0042QosLimits{value: val, isSet: true}
}

func (v NullableV0042QosLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042QosLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


