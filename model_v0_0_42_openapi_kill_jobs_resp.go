/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.11.5&openapi/slurmctld&openapi/slurmdbd
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slurmrestapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V0042OpenapiKillJobsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0042OpenapiKillJobsResp{}

// V0042OpenapiKillJobsResp struct for V0042OpenapiKillJobsResp
type V0042OpenapiKillJobsResp struct {
	// List of jobs signal responses
	Status []V0042KillJobsRespJob `json:"status"`
	Meta *V0042OpenapiMeta `json:"meta,omitempty"`
	Errors []V0042OpenapiError `json:"errors,omitempty"`
	Warnings []V0042OpenapiWarning `json:"warnings,omitempty"`
}

type _V0042OpenapiKillJobsResp V0042OpenapiKillJobsResp

// NewV0042OpenapiKillJobsResp instantiates a new V0042OpenapiKillJobsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0042OpenapiKillJobsResp(status []V0042KillJobsRespJob) *V0042OpenapiKillJobsResp {
	this := V0042OpenapiKillJobsResp{}
	this.Status = status
	return &this
}

// NewV0042OpenapiKillJobsRespWithDefaults instantiates a new V0042OpenapiKillJobsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0042OpenapiKillJobsRespWithDefaults() *V0042OpenapiKillJobsResp {
	this := V0042OpenapiKillJobsResp{}
	return &this
}

// GetStatus returns the Status field value
func (o *V0042OpenapiKillJobsResp) GetStatus() []V0042KillJobsRespJob {
	if o == nil {
		var ret []V0042KillJobsRespJob
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *V0042OpenapiKillJobsResp) GetStatusOk() ([]V0042KillJobsRespJob, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status, true
}

// SetStatus sets field value
func (o *V0042OpenapiKillJobsResp) SetStatus(v []V0042KillJobsRespJob) {
	o.Status = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *V0042OpenapiKillJobsResp) GetMeta() V0042OpenapiMeta {
	if o == nil || IsNil(o.Meta) {
		var ret V0042OpenapiMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042OpenapiKillJobsResp) GetMetaOk() (*V0042OpenapiMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *V0042OpenapiKillJobsResp) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given V0042OpenapiMeta and assigns it to the Meta field.
func (o *V0042OpenapiKillJobsResp) SetMeta(v V0042OpenapiMeta) {
	o.Meta = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *V0042OpenapiKillJobsResp) GetErrors() []V0042OpenapiError {
	if o == nil || IsNil(o.Errors) {
		var ret []V0042OpenapiError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042OpenapiKillJobsResp) GetErrorsOk() ([]V0042OpenapiError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *V0042OpenapiKillJobsResp) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []V0042OpenapiError and assigns it to the Errors field.
func (o *V0042OpenapiKillJobsResp) SetErrors(v []V0042OpenapiError) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *V0042OpenapiKillJobsResp) GetWarnings() []V0042OpenapiWarning {
	if o == nil || IsNil(o.Warnings) {
		var ret []V0042OpenapiWarning
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0042OpenapiKillJobsResp) GetWarningsOk() ([]V0042OpenapiWarning, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *V0042OpenapiKillJobsResp) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []V0042OpenapiWarning and assigns it to the Warnings field.
func (o *V0042OpenapiKillJobsResp) SetWarnings(v []V0042OpenapiWarning) {
	o.Warnings = v
}

func (o V0042OpenapiKillJobsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0042OpenapiKillJobsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *V0042OpenapiKillJobsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0042OpenapiKillJobsResp := _V0042OpenapiKillJobsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV0042OpenapiKillJobsResp)

	if err != nil {
		return err
	}

	*o = V0042OpenapiKillJobsResp(varV0042OpenapiKillJobsResp)

	return err
}

type NullableV0042OpenapiKillJobsResp struct {
	value *V0042OpenapiKillJobsResp
	isSet bool
}

func (v NullableV0042OpenapiKillJobsResp) Get() *V0042OpenapiKillJobsResp {
	return v.value
}

func (v *NullableV0042OpenapiKillJobsResp) Set(val *V0042OpenapiKillJobsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableV0042OpenapiKillJobsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableV0042OpenapiKillJobsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0042OpenapiKillJobsResp(val *V0042OpenapiKillJobsResp) *NullableV0042OpenapiKillJobsResp {
	return &NullableV0042OpenapiKillJobsResp{value: val, isSet: true}
}

func (v NullableV0042OpenapiKillJobsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0042OpenapiKillJobsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


